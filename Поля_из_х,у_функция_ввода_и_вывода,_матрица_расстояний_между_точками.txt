#include <stdio.h>
#include <math.h>

struct pointf {
	float x,y;
	float r;
};

void vvod (pointf *, int);
void vivod (pointf *, int);
float rast (pointf, pointf);
float **matr_rast (pointf *, int);
void vivod_matr(float **, int, int);

void main () {
pointf *z; float **rs; float d; int i,j,n,m,k,r;
n=5; z=new pointf [n];
vvod(z,n);
vivod(z,n);
printf ("\n");

d=rast(z[0],z[n-1]);
printf ("%f \n \n",d);

rs=matr_rast(z,n);
vivod_matr(rs,n-1,n-1);


scanf_s("%d",&k); 
}

void vvod (pointf *a, int k){
	int i;
	for (i=0;i<k;i++)                                            //вводим массив полей pointf
		scanf_s("%f %f",&a[i].x,&a[i].y);
}

void vivod (pointf *a, int k){
	int i;                                                       //выводим массив полей pointf
	for (i=0;i<k;i++)
		printf ("%f  %f \n",a[i].x, a[i].y);
}

float rast (pointf t1, pointf t2){
	float r;                                                         //находим расстояние между 2-мя точками
	r=sqrt((t1.x-t2.x)*(t1.x-t2.x)+(t1.y-t2.y)*(t1.y-t2.y));
	return r;
}

float **matr_rast (pointf *b, int n){
	float **r; int i,j;
	r=new float*[n-1];
	for (i=0;i<n-1;i++)
		r[i]=new float [n-1];                                           //матрица расстояний между двумя точками

	for(i=0;i<n-2;i++)
		for(j=i+1;j<n-1;j++)
			r[i][j]=rast(b[i],b[j]);
	return r;
}


void vivod_matr(float **p, int n, int m){
	int i,j;
for (i=0;i<n;i++){
 for (j=i+1;j<m;j++)                                          //функция ввывода матрицы
	 printf ("%f ",p[i][j]);
 printf("\n");}
printf("\n");

}